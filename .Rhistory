install_from_swirl("R Programming")
swirl()
q()
q()
y <- rnorm(1000)
hist(y)
x <- rnorm(100)
plot(x,y)
x <- rnorm(1000)
plot(x,y)
par(mar = c(2,2,2,2))
par(mar = c(4,4,2,2))
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y, pch = *)
plot(x,y, pch = #)
2
2
plot(x,y, pch = 25)
plot(x,y, pch = 26)
plot(x,y, pch = 2)
plot(x,y, pch = 22)
fit <- lm(x ~ y)
abline(fit, lwd  = 3, col = "blue")
z <- rpois(1000)
?rpois
z <- rpois(1000,0)
z <- rpois(1000,4)
z <- rpois(1000,100)
hist(z)
rnorm()
?rnorm()
?scale
z <- scale(z)
plot(z)
plot()
plot(x)
plot(z)
plot(x, z)
?gl
gl(2,1,20)
gl(2,2,20)
gl(2,3,20)
gl(2,3)
gl(2,3,1)
gl(2,50, labels = c("male", female))
gl(2,50, labels = c("male", "female"))
x <- rnorm(100)
y <- 3 * x + rnorm(100)
plot(x,y)
plot(x,y, type = "n")
points(x[g =="male"], y[g == "male"], col = "green")
g <- gl(2,50, labels = c("male", "female"))
points(x[g =="male"], y[g == "male"], col = "green")
points(x[g =="female"], y[g == "female"], col = "red")
points(x[g =="male"], y[g == "male"], col = "green", pch = 19)
points(x[g =="female"], y[g == "female"], col = "red", pch = 18)
?Devices
q()
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = cyl)
qplot(displ, hwy, data = mpg, color = fl)
qplot(displ, hwy, data = mpg, color = year)
qplot(displ, hwy, data = mpg, color = cty)
qplot(displ, hwy, data = mpg, geom("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
?geom
?qplot
qplot(mpg, data = mtcars, geom = "dotplot")
?qplot
qplot(factor(cyl), wt, data = mtcars, geom=c("boxplot", "jitter"))
?qplot
qplot(mpg, wt, data = mtcars, geom="path")
qplot(hwy, data = mpg
)
qplot(hwy, data = mpg, fill = mpg)
qplot(hwy, data = mpg, fill = cty)
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, col = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = drv)
qplot(displ, hwy, data = mpg, facets = drv ~.)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = drv ~.)
qplot(displ, hwy, data = mpg, facets = .~drv)
q()
library(ggplot2)
?ggplot
?geom_smooth()
?method
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lines
?axis
?points
?llines
?splom
splom(weight, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
splom(weight ~ Time | Diet, BodyWeight)
splom(weight ~ Time, BodyWeight)
?splom
?par
?tresslis.par.set
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets =.~factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x,y, col = "steelblue", pch = 19, cex = 2)
text = (x+0.05, y +0.05, labels  = as.character(1:12))
text = (x + 0.05, y + 0.05, labels  = as.character(1:12))
text(x + 0.05, y + 0.05, labels  = as.character(1:12))
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x,y, col = "steelblue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels  = as.character(1:12))
dataFramce <- data.frame(x = x, y = y)
dist(dataFrame)
dataFramce <- data.frame(x = x, y = y)
dist(dataFrame)
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
?plt
?plot
?dist
plot(x,y, col = "steelblue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels  = as.character(1:12))
distxy <- dist(dataFrame)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
set.seet(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataMatrix
dataMatrix <- as.matrix(dataFrame)
dataMatrix
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataMatrix
set.seed(143)
dataMatrix <- as.matrix(dataFrame)
dataMatrix
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataMatrix
heatmap(dataMatrix)
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x,y, col = "steelblue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels  = as.character(1:12))
clustrObj <- kmeans(dataFrame, centers = 3)
summary(clustrObj)
str(clustrObj)
plot(x,y, col = clustrObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1:3, pch = 2, cex = 5, lwd = 4)
points(clustrObj$centers, col = 1:3, pch = 2, cex = 5, lwd = 4)
points(clustrObj$centers, col = 1:3, pch = 3, cex = 5, lwd = 4)
plot(x,y, col = clustrObj$cluster, pch = 19, cex = 2)
points(clustrObj$centers, col = 1:3, pch = 3, cex = 5, lwd = 4)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
kmeansobj <- kmeans(dataMatrix, centers = 3)
par(mfrow= c(1,2))
image(t(dataMatrix)[,nrow(dataMatrix):1], yaxr = 'n')
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = 'n')
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
kmeansobj <- kmeans(dataMatrix, centers = 3)
par(mfrow= c(1,2))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = 'n')
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = 'n')
image(t(dataMatrix)[, order(clustrObj$cluster)], yaxt = 'n')
image(t(dataMatrix)[, order(kmeansobj$cluster)], yaxt = 'n')
?image
?t
rep(c(0,3), each = 5)
?image
plot(rep(c(0,1), 5))
plot(rep(c(0,1), each = 5))
?rep
plot(rep(c(0,1), each = 5))
rep(c(0,3), each = 5)
rep(c(0,3), times = 5)
rep(c(0,3), times = 5, length = 12)
rep(c(0,3), times = 5, length = 9)
rep(c(0,3), each = 5, length = 9)
rep(c(0,3), each = 5, length = 11)
rep(c(0,3), length = 11)
?rep
pal <- colorRamp(c("red", "yellow"))
pal(0)
pal(1)
pal(0.5)
pal <- colorRamp(c("red", "yellow", "green"))
pal(0)
pal(1)
pal(0.5)
pal <- colorRamp(c("red", "yellow", "green", "blue"))
pal(0)
pal(1)
pal(0.5)
set.seed(1234)
a <- rnorm(10000)
b <- rnorm(10000)
plot(a,b)
smoothscatter(a,b)
smoothScatter(a,b)
par(mfrow= c(1,1))
smoothScatter(a,b)
plot(a,b, col = rgb(0,0,1,0.2))
q()
q()
install.packages("kernlab")
install.packages(c("manipulate", "RMySQL", "stringi", "testthat"))
library(kernlab)
install.packages(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
head(spam)
tail(spam)
set.seed(123)
x<- rnorm(100)
y<- rnorm(100)
plot()
plot(x)
plot(x[1:50,])
plot(x[1:50])
ds <- cbind(x,y)
plot(ds)
hist
hist(ds)
hist(x)
hist(y)
q()
q()
library(swirl)
swirl()
swirl()
install_from_swirl("Statistical Inference")
?rbinom
rbinom(5)
rbinom(5,3)
rbinom(5,3,2)
rbinom(5,3,0.5)
rbinom(5,3,0.5)
rbinom(5,3,0.5)
rbinom(5,3,0.5)
rbinom(5,1,0.5)
rbinom(5,1,0.5)
rbinom(5,1,0.5)
rbinom(5,3,0.9)
hist(rbinom(5,3,0.9))
hist(rbinom(100,3,0.9))
hist(rbinom(100,3,0.9))
hist(rbinom(100,3,0.5))
hist(rbinom(100,3,0.5))
hist(rbinom(100,2,0.5))
hist(rbinom(100,1,0.5))
hist(rbinom(100,1,0.5))
hist(rbinom(100,1,0.5))
hist(rbinom(100,1,0.5))
hist(rbinom(100,1,0.5))
?pbeta
pbeta(0.75, 2,1)
rbeta(100,2,1)
hist(rbeta(100,2,1))
hist(rbeta(1000,2,1))
sqrt(0.5)
qbeta(0.5,2,1)
digits = 4
qbeta(0.5,2,1)
qbeta(0.5,2,1, digits = 4)
options(digits = 4)
qbeta(0.5,2,1)
install.packages(UsingR)
install.packages("UsingR")
library(UsingR); data(galton); library(ggplot2)
library(reshape2)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
q()
p <- c(0.1, 0.2, 0.3, 0.4)
c <- 2:5
c.sq <- c * c
e.sq <- c.sq *p
e.sq <- sum(c.sq *p)
e <- sum(c *p)
e <- sum(c *p)^2
q()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x * p)
y <- 75 * 30
z <- 48 * 70
z <- z + y
y / z
library(swirl)
rm(list = ls())
swirl()
11/12
deck
52
4/52
0
12/52
2/51
0.64
0.64
mypdf
?integrate
integrate(mypdf, lower = 0, upper = 1.6)
1
0.5
sqrt(2)
?sample
?runif
runif(1000)
x <- runif(1000)
y <- x^2 / 4
plot(x,y)
z <- x/2
plot(x,z)
plot(y,z)
plot(z,y)
plot(x,y)
plot(z,y)
plot(x,y)
swirl()
swirl()
0.997 * 0.001
0.985 * 0.999
(1 - 0.985) * 0.999
0.997 * 0.001 /((0.997 * 0.001) + ((1 - 0.985) * 0.999))
q()
library("swirl")
swirl()
3.5
summary(expect_dice)
str(expect_dice)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5(edh + edl)
0.5*(edh + edl)
2
myfunc
integrate(myfunc, 0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(sneabs)
mean(smeans)
install.packages("caret")
q()
98901 +999
+100
98901 +999 + 100
999*99
98901+999
99+999
99/1098
99/10.98
install.packages("slidify")
install.packages("xtable")
q()
?pbinom
pbinom(q = 6, size = 8, lower.tail = F)
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = F)
hist(runif(1000))
hist(rnorm(1000))
hist(rbinom(1000))
hist(rbinom(1000, 1))
hist(rbinom(1000, 1, 0.5))
hist(rpois(1000, 1, 0.5))
hist(rpois(1000, 1,))
hist(rpois(1000, 1))
1-pnorm(1160, mean = 1020, sd = 50)
qnorm(75, 1020, 50)
qnorm(0.75, 1020, 50)
?qnorm
round(qnorm(0.75, 1020, 50),0)
?rpois
?cumsum
n <- 10000
cumsum(n)
means <- cumsum(n)
means <- cumsum(rnorm(n))
plot(means)
means <- cumsum(rnorm(n)) / (1/n)
plot(means)
means <- cumsum(rnorm(n)) / (1:n)
plot(means)
sample(0:1,10)
sample(0:1,10, replace = )
sample(0:1,10, replace = T)
qnorm(0.975)
qnorm(1-0.975)
qnorm(93, 100, sd = 10)
?qnorm
pnorm(93, mean = 100, sd = 10)
88/95
qnorm(0.95, mean = 100, sd = 10)
qnorm(0.95, mean = 100, sd = 10/(50^0.5))
choose(6,5)
choose(6,6)
choose(6,3)
choose(6,4)
choose(6,2)
choose(6,5) * 0.5 ^6
a <- choose(6,5) * 0.5 ^6
b <- choose(6,6) * 0.5 ^6
a+b
?runif
pnorm(0.51, mean = 0.5, sd = 1/120
)
pnorm(0.51, mean = 0.5, sd = 1/120, lower.tail = T)
pnorm(0.51, mean = 0.5, sd = 1/120, lower.tail = )
pnorm(0.51, mean = 0.5, sd = 1/120, lower.tail = F)
mean((1 : 6 - 3.5)^2 / 10)
(1 : 6 - 3.5)^2 / 10
2.5^2
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75, lower.tail = F)
qnorm(0.05, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 7.5)
choose(5,4) * 0.5^5 + choose(5,5) * 0.5^5
pnorm(16, mean = 15, sd = 1) - pnorm(14, mean = 15, sd = 1)
?ppois
ppois(10, lambda = 15)
q()
library(caret)
?train
?trainControl
library(caret)
library(kernlab)
?trainControl
?trainControl
q()
setwd ("E:\Work\coursera\Reproducible Research\RepData_PeerAssessment1")
setwd ("E:\Work\coursera\Reproducible Research\RepData_PeerAssessment1")
unzip(activity.zip)
setwd("E:\Work\coursera\Reproducible Research\RepData_PeerAssessment1")
?setwd
getwd
getwd()
setwd("E:/Work/coursera/Reproducible Research/RepData_PeerAssessment1")
unzip(activity.zip)
unzip("activity.zip")
read.csv("activity.zip")
activity <- read.csv("activity.zip")
View(activity)
View(activity)
unzip("repdata-data-activity.zip")
activity <- read.csv("activity.zip")
activity <- read.csv("activity.zip")
activity <- read.csv("activity.csv")
activity <- read.csv("activity.csv")
names(activity)
mean(activity$steps)
head(activity)
tail(activity)
?table
mean(activity$steps, na.rm = T)
?mean
table(activity$date)
?lapply
lapply(activity$date, mean(activity$steps, na.rm = TRUE))
lapply(activity, mean(activity$steps, na.rm = TRUE))
sapply(activity$date, mean(activity$steps, na.rm = TRUE))
?table
?summary
?tapply
tapply(activity$date, mean(activity$steps, na.rm = TRUE))
tapply(activity, index = activity$date, FUN = mean(activity$steps, na.rm = TRUE))
?mean
head(activity)
q()
